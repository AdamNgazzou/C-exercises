#include <stdio.h>
#include <stdlib.h>
// all comments are Ai generated (better explain than wonder ) 
int main() {
    int **t;
    int n, m;
    int sum = 0;

    // Input dimensions
    do {
        printf("n = ");
        scanf("%d", &n);
        printf("m = ");
        scanf("%d", &m);
    } while (n < 0 || m < 0);

    // Allocate memory for rows
    t = (int **)malloc(n * sizeof(int *));
    if (t == NULL) {
        printf("Memory allocation failed for rows!\n");
        return 1;
    }

    // Allocate memory for columns in each row
    for (int i = 0; i < n; i++) {
        t[i] = (int *)malloc(m * sizeof(int));
        if (t[i] == NULL) {
            printf("Memory allocation failed for columns!\n");
            // Free previously allocated memory
            for (int j = 0; j < i; j++) {
                free(t[j]);
            }
            free(t);
            return 1;
        }
    }

    // Read elements of the array
    printf("Enter the elements of the array (%d x %d):\n", n, m);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("t[%d][%d] = ", i, j);
            scanf("%d", &t[i][j]);
        }
    }

    // Display the array and calculate the sum
    printf("\nThe array is:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d\t", t[i][j]);
            sum += t[i][j]; // Calculate the sum
        }
        printf("\n");
    }
    printf("\nThe sum of all elements is: %d\n", sum);

    // Free the allocated memory
    for (int i = 0; i < n; i++) {
        free(t[i]); // Free each row
    }
    free(t); // Free the array of pointers
    t = NULL;

    return 0;
}
